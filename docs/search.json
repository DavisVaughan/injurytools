[{"path":"https://lzumeta.github.io/injurytools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 injurytools Lore Zumeta Olaskoaga Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"rates","dir":"Articles","previous_headings":"","what":"Rates","title":"Estimate Measures for Injury Epidemiology","text":"Hodgson Phillips (2000) state, “Sports injuries occur athletes exposed given sport occur specific conditions, known time place.” Thus, attempting describe distribution injuries necessary relate population risk specified time period. fundamental unit measurement rate. rate measure consists denominator numerator period time. Denominator data can number different things (e.g. number minutes trained/played, number matches played). , reflects speed new “injury-related” events occurs.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"injury-incidence-rate","dir":"Articles","previous_headings":"Rates","what":"Injury incidence rate","title":"Estimate Measures for Injury Epidemiology","text":"Injury incidence rate number new injury cases (\\(\\)) per unit player-exposure time, .e. \\[ I_{r} = \\frac{}{\\Delta T}\\] \\(\\Delta T\\) total time risk study population.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"injury-burden-rate","dir":"Articles","previous_headings":"Rates","what":"Injury burden rate","title":"Estimate Measures for Injury Epidemiology","text":"Injury burden rate number days lost (\\(n_d\\)) per unit player-exposure time, .e. \\[I_{br} = \\frac{n_d}{\\Delta T}\\] \\(\\Delta T\\) total time risk study population. NOTE 1: Bahr, Clarsen, Ekstrand (2018) state, injury incidence (likelihood) injury burden (severity) reported assessed conjunction rather isolation. regard, see risk matrix plot provided gg_injriskmatrix() function. NOTE 2: neither injury incidence (\\(I_r\\)) injury burden (\\(I_{br}\\)) ratios, interpreted probability; rates unit (person-time)\\(^{-1}\\) (e.g. per 1000h player-exposure, per player-season etc.).","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"availability","dir":"Articles","previous_headings":"Rates","what":"Availability","title":"Estimate Measures for Injury Epidemiology","text":"Availability number players free injury (“available”) total number players study population specified period time.","code":""},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"injsummary","dir":"Articles","previous_headings":"In practice","what":"injsummary()","title":"Estimate Measures for Injury Epidemiology","text":"","code":"df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") injds <- injsummary(injd) #> Warning in injsummary_unit(unit, injds, quiet):  #> * Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #> Warning in injsummary_unit(unit, injds_overall, quiet):  #> * Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100)  # format the table for playerwise dataframe injds[[1]] %>%    arrange(desc(injincidence)) %>% # sort by decreasing order of injincidence   kable(digits = 2, col.names = c(\"Player\", \"N injuries\", \"N days lost\",                                   \"Total exposure\", \"Incidence\", \"Burden\")) # format the table for total incidence and burden main columns injds[[2]] %>%    select(1:5) %>%    data.frame(row.names = \"TOTAL\") %>%    kable(digits = 2,         col.names = c(\"N injuries\", \"N days lost\",                       \"Total exposure\", \"Incidence\", \"Burden\"),         row.names = TRUE) %>%    kable_styling(full_width = FALSE) # format the table for total incidence and burden point + ci estimates injds_tot_cis <- injds[[2]] %>%    select(4:last_col()) %>%    data.frame(row.names = \"TOTAL\") injds_tot_cis$ci_injincidence <- paste0(\"[\", round(injds_tot_cis$injincidence_lower, 1),                                     \", \",round(injds_tot_cis$injincidence_upper, 1), \"]\") injds_tot_cis$ci_injburden <- paste0(\"[\", round(injds_tot_cis$injburden_lower, 1),                                     \", \",round(injds_tot_cis$injburden_upper, 1), \"]\")  conf_level <- attr(injds, \"conf_level\")*100 injds_tot_cis %>%    select(1, 9, 2, 10) %>%    kable(digits = 2,         col.names = c(\"Incidence\",  paste0(\"CI\", conf_level, \"% for \\\\(I_r\\\\)\"),                        \"Burden\", paste0(\"CI\", conf_level, \"% for \\\\(I_{br}\\\\)\")))"},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"injprop","dir":"Articles","previous_headings":"In practice","what":"injprop()","title":"Estimate Measures for Injury Epidemiology","text":"EXPLAIN","code":"df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\",                             date = \"year\", time_expo = \"minutes_played\") df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\",                             date_injured = \"from\", date_recovered = \"until\") injd         <- prepare_all(data_exposures = df_exposures,                             data_injuries  = df_injuries,                             exp_unit = \"matches_minutes\") availability_table <- injprop(injd, by = \"monthly\", var_type_injury = \"injury_type\")"},{"path":"https://lzumeta.github.io/injurytools/articles/estimate-epi-measures.html","id":"further-implementation","dir":"Articles","previous_headings":"","what":"Further implementation","title":"Estimate Measures for Injury Epidemiology","text":"near future available negative binomial (method = \"negbin\" argument), zero-inflated poisson (“zinfpois”) zero-inflated negative binomial (\"zinfnb\") methods injsummary() function. Finally, document shows perform statistical descriptive analyses injury epidemiology, naturally, following analyses statistical inferences multivariate regression analyses may chosen infer player’s/athletes population properties (e.g. test whether differences injury incidence rates two cohorts) evaluate influence independent factors (e.g. previous injuries, workload) injuries occurred.","code":""},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"starting-point","dir":"Articles","previous_headings":"","what":"Starting point","title":"Prepare Sports Injury Data","text":"Data can collected several ways several means. conventional manner collect data events occur, respect common, field sports medicine, store injury records one hand, data related training competitions/matches (exposure time among others) separate table, hand. , consider user raw data two separate data sets call injury exposure data, respectively1.","code":""},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"prepare-and-standardize-injury-and-exposure-data","dir":"Articles","previous_headings":"","what":"1) prepare and standardize injury and exposure data","title":"Prepare Sports Injury Data","text":"Thus early task tidy two sources data. example data sets consider raw_df_injuries raw_df_exposures data sets available injurytools package. data Liverpool Football Club male’s first team players two consecutive seasons, 2017-2018 2018-2019, scrapped https://www.transfermarkt.com/ website: standardize key column names player (subject) identifier, dates injury recovery (), training/match/season date amount time exposure set proper formats means prepare_inj() prepare_exp()2. suggest collecting exposure time fine scale possible, .e. minutes desired unit total time spent training participating competitions/matches. However, units “seasons” :","code":"head(raw_df_injuries) #> # A tibble: 6 × 11 #>   player_n…¹ playe…² season from       until      days_…³ games…⁴ injury injur…⁵ #>   <fct>      <fct>   <fct>  <date>     <date>       <dbl>   <dbl> <chr>  <fct>   #> 1 adam-lall… 43530   17/18  2017-07-31 2017-11-25     117      21 Hamst… NO_ACL  #> 2 adam-lall… 43530   17/18  2018-03-31 2018-05-13      43      11 Hamst… NO_ACL  #> 3 adam-lall… 43530   18/19  2018-09-04 2018-10-19      45       7 Groin… NO_ACL  #> 4 adam-lall… 43530   18/19  2018-11-09 2018-12-04      25       4 Knock  NO_ACL  #> 5 adam-lall… 43530   18/19  2019-01-06 2019-01-18      12       2 Knock  NO_ACL  #> 6 adam-lall… 43530   18/19  2019-04-01 2019-05-31      60      10 Knock  NO_ACL  #> # … with 2 more variables: injury_type <fct>, injury_severity <fct>, and #> #   abbreviated variable names ¹​player_name, ²​player_id, ³​days_lost, #> #   ⁴​games_lost, ⁵​injury_acl head(raw_df_exposures) #>               player_name player_id season year matches_played minutes_played #> 1            adam-lallana     43530  17/18 2017             12            236 #> 2            adam-lallana     43530  18/19 2018             13            464 #> 3          alberto-moreno    207917  17/18 2017             16           1264 #> 4 alex-oxlade-chamberlain    143424  17/18 2017             32           1483 #> 5                 alisson    105470  18/19 2018             38           3420 #> 6        andrew-robertson    234803  17/18 2017             22           1943 #>      liga    club_name club_id age            place                   position #> 1 premier fc-liverpool      31  29      St Albans   Midfield_AttackingMidfield #> 2 premier fc-liverpool      31  30      St Albans   Midfield_AttackingMidfield #> 3 premier fc-liverpool      31  25        Sevilla            Defender_LeftBack #> 4 premier fc-liverpool      31  24     Portsmouth     Midfield_CentralMidfield #> 5 premier fc-liverpool      31  26  Novo Hamburgo                   Goalkeeper #> 6 premier fc-liverpool      31  23        Glasgow            Defender_LeftBack #>    foot goals assists reds #> 1  both     0       0    0 #> 2  both     0       0    0 #> 3  left     0       0    0 #> 4 right     3       7    0 #> 5 right     0       0    0 #> 6  left     1       5    0 df_injuries <- prepare_inj(df_injuries0   = raw_df_injuries,                            player         = \"player_name\",                            date_injured   = \"from\",                            date_recovered = \"until\") df_exposures <- prepare_exp(df_exposures0 = raw_df_exposures,                             player        = \"player_name\",                             date          = \"year\",                             time_expo     = \"minutes_played\") ## a possible way for the case that each row in exposure data correspond to a ## season and there is nor more information about time of exposure raw_df_exposures$time_expo_aux <- 1  df_exposures2 <- prepare_exp(df_exposures0 = raw_df_exposures,                              player        = \"player_name\",                              date          = \"year\",                              time_expo     = \"time_expo_aux\") injd <-  prepare_all(data_exposures = df_exposures2,                      data_injuries  = df_injuries,                      exp_unit = \"seasons\") head(injd) #> # A tibble: 6 × 19 #>   player       t0         tf         date_inj…¹ date_rec…² tstart     tstop      #>   <fct>        <date>     <date>     <date>     <date>     <date>     <date>     #> 1 adam-lallana 2017-07-01 2019-06-30 2017-07-31 2017-11-25 2017-07-01 2017-07-31 #> 2 adam-lallana 2017-07-01 2019-06-30 2018-03-31 2018-05-13 2017-11-25 2018-03-31 #> 3 adam-lallana 2017-07-01 2019-06-30 2018-09-04 2018-10-19 2018-05-13 2018-09-04 #> 4 adam-lallana 2017-07-01 2019-06-30 2018-11-09 2018-12-04 2018-10-19 2018-11-09 #> 5 adam-lallana 2017-07-01 2019-06-30 2019-01-06 2019-01-18 2018-12-04 2019-01-06 #> 6 adam-lallana 2017-07-01 2019-06-30 2019-04-01 2019-05-31 2019-01-18 2019-04-01 #> # … with 12 more variables: tstart_s <dbl>, tstop_s <dbl>, status <dbl>, #> #   enum <dbl>, days_lost <dbl>, player_id <fct>, season <fct>, #> #   games_lost <dbl>, injury <chr>, injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct>, and abbreviated variable names ¹​date_injured, #> #   ²​date_recovered"},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"integrate-both-sources-of-data","dir":"Articles","previous_headings":"","what":"2) integrate both sources of data","title":"Prepare Sports Injury Data","text":", apply prepare_all() data sets tidied . important specify unit exposure, exp_unit argument, must one “minutes”, “hours”, “days”, “matches_num”, “matches_minutes”, “activity_days”, “seasons”. outcome prepared data set, structured suitable way ready use statistical modelling approaches. data set always columns listed (standardized columns created function), well (optional) sports related variables. player: player identifier. t0 tf: follow-period corresponding player, .e. player’s first last dates observed (value player). date_injured date_recovered: dates injury recovery corresponding observation (; otherwise NA). tstart tstop: beginning ending dates corresponding interval observation risk injury. tstart_xand tstop_x: beginning ending times corresponding interval observation risk injury (depends unit exposure time specified). status: injury (event) indicator. enum: integer indicating recurrence number, .e. \\(k\\)-th injury (event), observation risk. days_lost: number days lost due injury occured tstop/date_injured (; otherwise 0), .e. date_recovered - date_injured days. example first row injd corresponds player Adam Lallana risk set starts 2017-07-01 ends 2017-07-31, played 236 minutes, got firstly (enum = 1) injured (status = 1). second row corresponds risk set injured second injury (enum = 2), starts fully recovered 2017-11-23 finshes suffered another hamstring injury3.","code":"injd <-  prepare_all(data_exposures = df_exposures,                     data_injuries  = df_injuries,                     exp_unit = \"matches_minutes\") head(injd) #> # A tibble: 6 × 19 #>   player       t0         tf         date_inj…¹ date_rec…² tstart     tstop      #>   <fct>        <date>     <date>     <date>     <date>     <date>     <date>     #> 1 adam-lallana 2017-07-01 2019-06-30 2017-07-31 2017-11-25 2017-07-01 2017-07-31 #> 2 adam-lallana 2017-07-01 2019-06-30 2018-03-31 2018-05-13 2017-11-25 2018-03-31 #> 3 adam-lallana 2017-07-01 2019-06-30 2018-09-04 2018-10-19 2018-05-13 2018-09-04 #> 4 adam-lallana 2017-07-01 2019-06-30 2018-11-09 2018-12-04 2018-10-19 2018-11-09 #> 5 adam-lallana 2017-07-01 2019-06-30 2019-01-06 2019-01-18 2018-12-04 2019-01-06 #> 6 adam-lallana 2017-07-01 2019-06-30 2019-04-01 2019-05-31 2019-01-18 2019-04-01 #> # … with 12 more variables: tstart_minPlay <dbl>, tstop_minPlay <dbl>, #> #   status <dbl>, enum <dbl>, days_lost <dbl>, player_id <fct>, season <fct>, #> #   games_lost <dbl>, injury <chr>, injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct>, and abbreviated variable names ¹​date_injured, #> #   ²​date_recovered # injd %>%  #   group_by(player) %>%  #   slice(1, n())"},{"path":"https://lzumeta.github.io/injurytools/articles/prepare-injury-data.html","id":"the-prepared-data-set-an-injd-object","dir":"Articles","previous_headings":"","what":"The prepared data set, an injd object","title":"Prepare Sports Injury Data","text":"final data set ’s R object class injd, following attributes: unit_exposure: character indicating unit exposure time used object. follow_up: data frame consisting one row per player first last dates observed (t0 tf columns). data_exposures: preprocessed exposure data frame. data_injuries: preprocessed injury data frame. data_injuries_long: data_injuries data frame long format row corresponds player-event_type. extract one attributes, example unit_exposure, type:","code":"class(injd) #> [1] \"injd\"       \"tbl_df\"     \"tbl\"        \"data.frame\" str(injd, 1) #> injd [108 × 19] (S3: injd/tbl_df/tbl/data.frame) #>  - attr(*, \"unit_exposure\")= chr \"matches_minutes\" #>  - attr(*, \"follow_up\")= tibble [28 × 3] (S3: tbl_df/tbl/data.frame) #>  - attr(*, \"data_exposures\")='data.frame':   42 obs. of  16 variables: #>  - attr(*, \"data_injuries\")= tibble [82 × 11] (S3: tbl_df/tbl/data.frame) #>  - attr(*, \"data_injuries_long\")= tibble [164 × 3] (S3: tbl_df/tbl/data.frame) attr(injd, \"unit_exposure\") #> [1] \"matches_minutes\""},{"path":"https://lzumeta.github.io/injurytools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lore Zumeta Olaskoaga. Author, maintainer. Dae-Jin Lee. Author.","code":""},{"path":"https://lzumeta.github.io/injurytools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zumeta Olaskoaga L, Lee D (2022). injurytools: toolkit Sports Injury Data Analysis. https://github.com/lzumeta/injurytools, https://lzumeta.github.io/injurytools/.","code":"@Manual{,   title = {injurytools: A toolkit for Sports Injury Data Analysis},   author = {Lore {Zumeta Olaskoaga} and Dae-Jin Lee},   year = {2022},   note = {https://github.com/lzumeta/injurytools, https://lzumeta.github.io/injurytools/}, }"},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"injurytools-","dir":"","previous_headings":"","what":"A toolkit for Sports Injury Data Analysis","title":"A toolkit for Sports Injury Data Analysis","text":"toolkit Sports Injury Data Analysis","code":""},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A toolkit for Sports Injury Data Analysis","text":"overview/description. get overview package, see Articles section.","code":""},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A toolkit for Sports Injury Data Analysis","text":"install current version GitHub: also planning release package CRAN. expect available soon.","code":"# devtools::install_github(\"lzumeta/injurytools\")"},{"path":"https://lzumeta.github.io/injurytools/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute","title":"A toolkit for Sports Injury Data Analysis","text":"problems package, find bugs suggestions improvements, please feel free open GitHub issue touch us directly via email. Also want give us feedback.","code":""},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that dates in injury data and exposure data — check_injfollowup","title":"Check that dates in injury data and exposure data — check_injfollowup","text":"Check dates injury data within dates exposure data.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that dates in injury data and exposure data — check_injfollowup","text":"","code":"check_injfollowup(followup_df, data_injuries)"},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that dates in injury data and exposure data — check_injfollowup","text":"followup_df Data frame created inside prepare_all() function. data_injuries Data frame given prepare_all() function.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/check_injfollowup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that dates in injury data and exposure data — check_injfollowup","text":"injury data cut dates injury occurrences within dates player's follow-period.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut the range of the follow-up — cut_injd","title":"Cut the range of the follow-up — cut_injd","text":"Given injd object cut range time period limits observed dates, first last observed dates, date0 datef, respectively. possible specify just one date, .e. two dates range necessarily entered. See Note section.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut the range of the follow-up — cut_injd","text":"","code":"cut_injd(injd, date0, datef)"},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut the range of the follow-up — cut_injd","text":"injd Prepared data, injd object. date0 Starting date, class Date numeric numeric refer year (e.g. date = 2018). Optional. datef Ending date. class date0. Optional.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut the range of the follow-up — cut_injd","text":"injd object shorter follow-period.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Cut the range of the follow-up — cut_injd","text":"aware modifying follow-period cohort, study design altered. function used, unless strong argument supporting . case, used caution.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/cut_injd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut the range of the follow-up — cut_injd","text":"","code":"# Prepare data # df_injuries <- prepare_inj(df_injuries0   = raw_df_injuries, #                            player         = \"player_name\", #                            date_injured   = \"from\", #                            date_recovered = \"until\") # # df_exposures <- prepare_exp(df_exposures0 = raw_df_exposures, #                             player        = \"player_name\", #                             date          = \"year\", #                             time_expo     = \"minutes_played\") # # injd <- prepare_all(data_exposures = df_exposures, #                     data_injuries  = df_injuries, #                     exp_unit = \"matches_minutes\")   # Cut the follow-up period of the object # (please, use it carefully) cut_injd(injd, date0 = 2018) #> Warning: Injury data has been cut to the given follow-up period (in exposure data) #> # A tibble: 74 × 19 #>    player      t0         tf         date_inj…¹ date_rec…² tstart     tstop      #>    <fct>       <date>     <date>     <date>     <date>     <date>     <date>     #>  1 adam-lalla… 2018-07-01 2019-06-30 2018-09-04 2018-10-19 2018-07-01 2018-09-04 #>  2 adam-lalla… 2018-07-01 2019-06-30 2018-11-09 2018-12-04 2018-10-19 2018-11-09 #>  3 adam-lalla… 2018-07-01 2019-06-30 2019-01-06 2019-01-18 2018-12-04 2019-01-06 #>  4 adam-lalla… 2018-07-01 2019-06-30 2019-04-01 2019-05-31 2019-01-18 2019-04-01 #>  5 adam-lalla… 2018-07-01 2019-06-30 NA         NA         2019-05-31 2019-06-30 #>  6 alisson     2018-07-01 2019-06-30 NA         NA         2018-07-01 2019-06-30 #>  7 andrew-rob… 2018-07-01 2019-06-30 2018-12-03 2018-12-07 2018-07-01 2018-12-03 #>  8 andrew-rob… 2018-07-01 2019-06-30 2019-02-25 2019-02-26 2018-12-07 2019-02-25 #>  9 andrew-rob… 2018-07-01 2019-06-30 2019-05-08 2019-05-11 2019-02-26 2019-05-08 #> 10 andrew-rob… 2018-07-01 2019-06-30 2019-06-12 2019-06-24 2019-05-11 2019-06-12 #> # … with 64 more rows, 12 more variables: tstart_minPlay <dbl>, #> #   tstop_minPlay <dbl>, status <dbl>, enum <dbl>, days_lost <dbl>, #> #   player_id <fct>, season <fct>, games_lost <dbl>, injury <chr>, #> #   injury_acl <fct>, injury_type <fct>, injury_severity <fct>, and abbreviated #> #   variable names ¹​date_injured, ²​date_recovered"},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":null,"dir":"Reference","previous_headings":"","what":"Build follow-up data frame — data_followup","title":"Build follow-up data frame — data_followup","text":"Build follow-data frame","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build follow-up data frame — data_followup","text":"","code":"data_followup(data_exposures)"},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build follow-up data frame — data_followup","text":"data_exposures Exposure data frame standardized column names, fashion prepare_exp() returns.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_followup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build follow-up data frame — data_followup","text":"data frame row corresponds player /first date (t0) last date (tf) observed.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_injuarieslong.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform injury data into a long format — data_injuarieslong","title":"Transform injury data into a long format — data_injuarieslong","text":"Transform injury data long format","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_injuarieslong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform injury data into a long format — data_injuarieslong","text":"","code":"data_injuarieslong(data_injuries)"},{"path":"https://lzumeta.github.io/injurytools/reference/data_injuarieslong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform injury data into a long format — data_injuarieslong","text":"data_injuries Injury data frame standardized column names, fashion prepare_inj() returns.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/data_injuarieslong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform injury data into a long format — data_injuarieslong","text":"data_injuries data frame long format row corresponds player-event.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the season — date2season","title":"Get the season — date2season","text":"Get season given date.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the season — date2season","text":"","code":"date2season(date)"},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the season — date2season","text":"date Date object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the season — date2season","text":"Character specifying respective competition season given date.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date2season.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the season — date2season","text":"","code":"date <- Sys.Date() date2season(date) #> [1] \"2022/2023\""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Proper Conversion of Date objects — date_format","title":"Proper Conversion of Date objects — date_format","text":"Converts Date objects common format used every Date object throughout package.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proper Conversion of Date objects — date_format","text":"","code":"date_format(date)"},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proper Conversion of Date objects — date_format","text":"date Date object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proper Conversion of Date objects — date_format","text":"\"%Y-%m-%d\" formatted Date object respect fixed locale time zone, .e. setting LC_TIME component C timezone UTC (safest choice, non-geographic Coordinated Universal Time).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/date_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Proper Conversion of Date objects — date_format","text":"limit scope changes LC_TIME timezone, temporary locale modification made using withr package.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain suffix for time exposure unit — exp_unit_suffix","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"Obtain suffix time exposure unit","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"","code":"exp_unit_suffix(exp_unit)"},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"exp_unit Character defining unit time exposure (\"minutes\" default).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/exp_unit_suffix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain suffix for time exposure unit — exp_unit_suffix","text":"Character indicating respective suffix exp_unit entered.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injbarplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot player's injury incidence/burden ranking — gg_injbarplot","title":"Plot player's injury incidence/burden ranking — gg_injbarplot","text":"bar chart shows player-wise injury summary statistics, either injury incidence injury burden, ranked descending order.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injbarplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot player's injury incidence/burden ranking — gg_injbarplot","text":"","code":"gg_injbarplot(injds, type = c(\"incidence\", \"burden\"), title = NULL)"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injbarplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot player's injury incidence/burden ranking — gg_injbarplot","text":"injds injds S3 object (see injsummary()). type character value indicating whether plot injury incidence's injury burden's ranking, one \"incidence\" \"burden\", respectively. title Text main title.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injbarplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot player's injury incidence/burden ranking — gg_injbarplot","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injbarplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot player's injury incidence/burden ranking — gg_injbarplot","text":"","code":"# Prepare data # df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\", #                             date = \"year\", time_expo = \"minutes_played\") # df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\", #                             date_injured = \"from\", date_recovered = \"until\") # injd         <- prepare_all(data_exposures = df_exposures, #                             data_injuries  = df_injuries, #                             exp_unit = \"matches_minutes\")  # Estimate injury summary statistics injds <- injsummary(injd) #> Warning:  #> * Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> Warning:  #> * Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>   # Plot p1 <- gg_injbarplot(injds, type = \"incidence\",                     title = \"Overall injury incidence per player\") p2 <- gg_injbarplot(injds, type = \"burden\",                     title = \"Overall injury burden per player\")  # install.packages(\"gridExtra\") # library(gridExtra) if (require(\"gridExtra\")) {   gridExtra::grid.arrange(p1, p2, nrow = 1) } #> Loading required package: gridExtra"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injphoto.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot injuries over the follow-up period — gg_injphoto","title":"Plot injuries over the follow-up period — gg_injphoto","text":"Given injd S3 object plots overview injuries sustained player/athlete cohort follow-. subject timeline depicted horizontally red cross indicates exact injury date, blue circle recovery date bold black line indicates duration injury (time-loss).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injphoto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot injuries over the follow-up period — gg_injphoto","text":"","code":"gg_injphoto(injd, title = NULL, fix = FALSE, by_date = \"1 months\")"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injphoto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot injuries over the follow-up period — gg_injphoto","text":"injd Prepared data, injd object. title Text main title. fix logical value indicating whether limit range date (x scale) maximum observed exposure date limit x scale, regardless recovery dates might longer maximum observed exposure date. by_date increment date sequence x-axis tick-marks drawn. Argument passed base::seq.Date().","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injphoto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot injuries over the follow-up period — gg_injphoto","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injphoto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot injuries over the follow-up period — gg_injphoto","text":"","code":"# Prepare data # df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\", #                             date = \"year\", time_expo = \"minutes_played\") # df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\", #                             date_injured = \"from\", date_recovered = \"until\") # injd         <- prepare_all(data_exposures = df_exposures, #                             data_injuries  = df_injuries, #                             exp_unit = \"minutes\")  gg_injphoto(injd, title = \"Injury Overview\", by_date = \"1 years\")"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injpolar.html","id":null,"dir":"Reference","previous_headings":"","what":"Polar area diagrams for available/injured players proportions — gg_injpolar","title":"Polar area diagrams for available/injured players proportions — gg_injpolar","text":"Plot proportions available injured players cohort monthly season basis. information type injury may specified injured players proportion disaggregated reported according variable.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injpolar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polar area diagrams for available/injured players proportions — gg_injpolar","text":"","code":"gg_injpolar(   injd,   by = c(\"monthly\", \"season\"),   var_type_injury,   title = \"Polar area diagram\\ninjured and available (healthy) players per month\" )"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injpolar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polar area diagrams for available/injured players proportions — gg_injpolar","text":"injd Prepared data, injd object. Character, one \"monthly\" \"season\", specifying periodicity according calculate proportions available injured players/athletes. var_type_injury Character specifying name column basis classify injuries calculate proportions injured players. refer (categorical) variable describes \"type injury\". Defaults NULL. title Text main title.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injpolar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polar area diagrams for available/injured players proportions — gg_injpolar","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injpolar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polar area diagrams for available/injured players proportions — gg_injpolar","text":"","code":"# Prepare data # df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\", #                             date = \"year\", time_expo = \"minutes_played\") # df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\", #                             date_injured = \"from\", date_recovered = \"until\") # injd         <- prepare_all(data_exposures = df_exposures, #                             data_injuries  = df_injuries, #                             exp_unit = \"matches_minutes\")  gg_injpolar(injd, var_type_injury = \"injury_type\")"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Risk matrix plot — gg_injriskmatrix","title":"Risk matrix plot — gg_injriskmatrix","text":"Given injds S3 object depicts risk matrix plots (see References section), graph injury severity plotted injury incidence. point estimates measure, well confidence intervals, plotted according method used running injsummary() function.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Risk matrix plot — gg_injriskmatrix","text":"","code":"gg_injriskmatrix(   injds,   var_type_injury = NULL,   title = NULL,   xlab = \"Incidence (injuries per _)\",   ylab = \"Burden (days lost per _)\",   errh_height = 3,   errv_width = 0.5 )"},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Risk matrix plot — gg_injriskmatrix","text":"injds injds S3 object (see injsummary()) var_type_injury Character specifying name column, (categorical) variable referring \"type injury\" (e.g. muscular/articular/others overuse/-overuse etc.) according visualize injury summary statistics (optional, defaults NULL). title Text main title, passed ggplot2::ggtitle(). xlab x-axis label passed ggplot2::xlab(). ylab y-axis label passed ggplot2::ylab(). errh_height Set height horizontal interval whiskers; height argument ggplot2::geom_errorbarh() errv_width Set width vertical interval whiskers; width argument ggplot2::geom_errorbar()","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Risk matrix plot — gg_injriskmatrix","text":"ggplot object (optionally layers can added).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Risk matrix plot — gg_injriskmatrix","text":"Bahr R, Clarsen B, Derman W, et al. International Olympic Committee consensus statement: methods recording reporting epidemiological data injury illness sport 2020 (including STROBE Extension Sport Injury Illness Surveillance (STROBE-SIIS)) British Journal Sports Medicine 2020; 54:372-389. Fuller, C. W. (2018). Injury Risk (Burden), Risk Matrices Risk Contours Team Sports: Review Principles, Practices Problems. Sports Medicine, 48(7), 1597–1606. https://doi.org/10.1007/s40279-018-0913-5","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/gg_injriskmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Risk matrix plot — gg_injriskmatrix","text":"","code":"# Prepare data # df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\", #                             date = \"year\", time_expo = \"minutes_played\") # df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\", #                             date_injured = \"from\", date_recovered = \"until\") # injd         <- prepare_all(data_exposures = df_exposures, #                             data_injuries  = df_injuries, #                             exp_unit = \"matches_minutes\")  # Estimate injury summary statistics injds <- injsummary(injd) #> Warning:  #> * Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> Warning:  #> * Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  injds2 <- injsummary(injd, var_type_injury = \"injury_type\") #> Warning:  #> * Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> Warning:  #> * Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>   # Plot gg_injriskmatrix(injds)  gg_injriskmatrix(injds2, var_type_injury = \"injury_type\", title = \"Risk matrix\")"},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of an injd object — injd","title":"Example of an injd object — injd","text":"injd object (S3), called injd, showcase object like also save computation time help files provided package. result applying prepare_all() raw_df_exposures (prepare_exp(raw_df_exposures, ...)) raw_df_injuries (prepare_inj(raw_df_injuries, ...)).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of an injd object — injd","text":"","code":"injd"},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of an injd object — injd","text":"main data frame injd gathers information 28 players 108 rows 19 columns: player Player identifier (factor) t0 Follow-period corresponding player, .e. player’s first observed date, value player (Date) tf Follow-period corresponding player, .e. player’s last observed date, value player (Date) date_injured Date injury corresponding observation (; otherwise NA) (Date) date_recovered Date recovery corresponding observation (; otherwise NA) (Date) tstart Beginning date corresponding interval observation risk injury (Date) tstop Ending date corresponding interval observation risk injury (Date) tstart_minPlay Beginning time, minutes played matches start interval observation risk injury (numeric) tstop_minPlay Ending time, minutes played matches finish interval observation risk injury (numeric) status injury (event) indicator (numeric) enum integer indicating recurrence number, .e. \\(k\\)-th injury (event), observation risk days_lost Number days lost due injury (numeric) player_id Identification number football player (factor) season Season player's entry corresponds (factor) games_lost Number matches lost due injury (numeric) injury Injury specification appears https://wwww.transfermarkt.com, ; otherwise NA (character) injury_acl Whether Anterior Cruciate Ligament (ACL) injury (NO_ACL); interval corresponds injury, NA otherwise (factor) injury_type five level categorical variable indicating type injury, whether Bone, Concussion, Ligament, Muscle Unknown; , NA otherwise (factor) injury_severity four level categorical variable indicating severity injury, whether Minor (<7 days lost), Moderate ([7, 28) days lost), Severe ([28, 84) days lost) Very_severe (>=84 days lost); , NA otherwise (factor)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of an injd object — injd","text":"consists data frame plus 5 attributes, character specifying unit exposure (unit_exposure); 4 (auxiliary) data frames: follow_up, data_exposures, data_injuries data_injuries_long.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injprop.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — injprop","title":"Title — injprop","text":"Title","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injprop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — injprop","text":"","code":"injprop(injd, by = c(\"monthly\", \"season\"), var_type_injury)"},{"path":"https://lzumeta.github.io/injurytools/reference/injprop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — injprop","text":"injd Prepared data, injd object. FILL var_type_injury Character specifying name column basis classify injuries calculate proportions injured players. Defaults NULL.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injprop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — injprop","text":"FILL","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injprop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — injprop","text":"","code":"# df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\", #                             date = \"year\", time_expo = \"minutes_played\") # df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\", #                             date_injured = \"from\", date_recovered = \"until\") # injd         <- prepare_all(data_exposures = df_exposures, #                             data_injuries  = df_injuries, #                             exp_unit = \"matches_minutes\")  injprop(injd, by = \"monthly\", var_type_injury = \"injury_type\") #> # A tibble: 99 × 6 #>    season       month type_injury     n n_player  prop #>    <fct>        <fct> <fct>       <int>    <int> <dbl> #>  1 season 17/18 Jul   Available      19       23  82.6 #>  2 season 17/18 Jul   Ligament        1       23   4.3 #>  3 season 17/18 Jul   Muscle          3       23  13   #>  4 season 17/18 Aug   Available      18       23  78.3 #>  5 season 17/18 Aug   Muscle          3       23  13   #>  6 season 17/18 Aug   Unknown         2       23   8.7 #>  7 season 17/18 Sep   Available      22       23  95.7 #>  8 season 17/18 Sep   Muscle          1       23   4.3 #>  9 season 17/18 Oct   Available      19       23  82.6 #> 10 season 17/18 Oct   Concussion      1       23   4.3 #> # … with 89 more rows"},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Injury summary statistics — injsummary","title":"Injury summary statistics — injsummary","text":"Calculate injury summary statistics injury incidence injury burden (REF-ak), including total number injuries, number days lost due injury, total time exposure etc., means classic-standard (Poisson) method, negative binomial, zero-inflated poisson zero-inflated negative binomial, player overall basis.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Injury summary statistics — injsummary","text":"","code":"injsummary(   injd,   var_type_injury = NULL,   method = c(\"poisson\", \"negbin\", \"zinfpois\", \"zinfnb\"),   conf_level = 0.95,   quiet = FALSE )"},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Injury summary statistics — injsummary","text":"injd injd S3 object (see prepare_all()). var_type_injury Character specifying name column according compute injury summary statistics. refer (categorical) variable describes \"type injury\". Optional, defaults NULL. method Method estimate injury incidence injury burden. One \"poisson\", \"negbin\", \"zinfpois\" \"zinfnb\"; characters stand Poisson method, negative binomial method, zero-inflated Poisson zero-inflated negative binomial. conf_level Confidence level (default = 0.95). quiet Logical, whether silence warning messages (defaults FALSE).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Injury summary statistics — injsummary","text":"list two data frames comprising player-wise overall injury summary statistics, respectively, constitute injds S3 object, made following columns: ninjuries: number injuries sustained player given period specified injd data frame. ndayslost: number days lost player due injury given period specified injd data frame. totalexpo: total exposure player risk sustaining injury. injincidence: injury incidence, number injuries per unit exposure. injburden: injury burden, number days lost per unit exposure. var_type_injury: specified argument function.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Injury summary statistics — injsummary","text":"","code":"# df_exposures <- prepare_exp(raw_df_exposures, player = \"player_name\", #                             date = \"year\", time_expo = \"minutes_played\") # df_injuries  <- prepare_inj(raw_df_injuries, player = \"player_name\", #                             date_injured = \"from\", date_recovered = \"until\") # injd         <- prepare_all(data_exposures = df_exposures, #                             data_injuries  = df_injuries, #                             exp_unit = \"matches_minutes\")  injsummary(injd) #> Warning:  #> * Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> Warning:  #> * Exposure time unit is matches_minutes #>   So... Injury incidence and injury burden are calculated per 100 player-matches of exposure (90 minutes times 100) #>  #> $playerwise #> # A tibble: 28 × 6 #>    player                  ninjuries ndayslost totalexpo injincidence injburden #>    <fct>                       <dbl>     <dbl>     <dbl>        <dbl>     <dbl> #>  1 adam-lallana                    6       302       700        77.1     3883.  #>  2 alberto-moreno                  1        50      1264         7.12     356.  #>  3 alex-oxlade-chamberlain         1       316      1483         6.07    1918.  #>  4 alisson                         0         0      3420         0          0   #>  5 andrew-robertson                5        22      5162         8.72      38.4 #>  6 daniel-sturridge                3       122       927        29.1     1184.  #>  7 danny-ings                      0         0       265         0          0   #>  8 dejan-lovren                    6       160      3109        17.4      463.  #>  9 divock-origi                    1         5       366        24.6      123.  #> 10 dominic-solanke                 0         0       581         0          0   #> # … with 18 more rows #>  #> $overall #> # A tibble: 1 × 11 #>   ninjuries ndayslost totalexpo injinc…¹ injbu…² injin…³ injbu…⁴ injin…⁵ injin…⁶ #>       <dbl>     <dbl>     <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1        82      2049       700    1054.  26344.    116.    582.    863.   1246. #> # … with 2 more variables: injburden_lower <dbl>, injburden_upper <dbl>, and #> #   abbreviated variable names ¹​injincidence, ²​injburden, ³​injincidence_sd, #> #   ⁴​injburden_sd, ⁵​injincidence_lower, ⁶​injincidence_upper #>  #> attr(,\"class\") #> [1] \"injds\" \"list\"  #> attr(,\"unit_exposure\") #> [1] \"matches_minutes\" #> attr(,\"unit_timerisk\") #> [1] \"100 player-match\""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform injsummary() output according to the unit of exposure — injsummary_unit","title":"Transform injsummary() output according to the unit of exposure — injsummary_unit","text":"Transform injsummary() output according unit exposure","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform injsummary() output according to the unit of exposure — injsummary_unit","text":"","code":"injsummary_unit(unit, injds, quiet)"},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform injsummary() output according to the unit of exposure — injsummary_unit","text":"unit Character indicates unit exposure sports injury data. injds injds data frame transformed. quiet Logical, whether silence warning messages (defaults FALSE).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injsummary_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform injsummary() output according to the unit of exposure — injsummary_unit","text":"list two elements: () injds data frame 'injincidence' 'injburden' values transformed according unit, named injds (ii) character vector expresses statistic used rates (unit used player's time risk).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injuries_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimal example of injury data — injuries_df","title":"Minimal example of injury data — injuries_df","text":"example injury data set containing minimum required injury information well injury-related variables. includes four football players injury data row refers player-injury.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injuries_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimal example of injury data — injuries_df","text":"","code":"injuries_df"},{"path":"https://lzumeta.github.io/injurytools/reference/injuries_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Minimal example of injury data — injuries_df","text":"data frame 47 rows corresponding 4 players 13 variables: player_name Name football player (factor) player_id Identification number football player (factor) season Season player's entry corresponds (factor) Date injury data entry (Date) Date recovery data entry (Date) days_lost Number days lost due injury (numeric) games_lost Number matches lost due injury (numeric) injury Injury specification appears https://wwww.transfermarkt.com injury_acl  injury_type  injury_severity","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injuries_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Minimal example of injury data — injuries_df","text":"https://www.transfermarkt.com/","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/injurytools.html","id":null,"dir":"Reference","previous_headings":"","what":"injurytools package — injurytools","title":"injurytools package — injurytools","text":"Sports Injury Data analysed identify describe magnitude injury problem, also gain insights (e.g. determine potential risk factors) statistical modelling approaches. 'injurytools' package provides standardized routines utilities simplify analyses. offers functions data preparation, informative visualizations descriptive model-based analyses.","code":""},{"path":[]},{"path":"https://lzumeta.github.io/injurytools/reference/injurytools.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"injurytools package — injurytools","text":"Maintainer: Lore Zumeta Olaskoaga lzumeta@bcamath.org (ORCID) Authors: Dae-Jin Lee dlee@bcamath.org (ORCID)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injd.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is of class injd — is_injd","title":"Check if object is of class injd — is_injd","text":"Check object x class injds.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is of class injd — is_injd","text":"","code":"is_injd(x)"},{"path":"https://lzumeta.github.io/injurytools/reference/is_injd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is of class injd — is_injd","text":"x R object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injds.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is of class injds — is_injds","title":"Check if object is of class injds — is_injds","text":"Check object x class injds.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/is_injds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is of class injds — is_injds","text":"","code":"is_injds(x)"},{"path":"https://lzumeta.github.io/injurytools/reference/is_injds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is of class injds — is_injds","text":"x R object.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://lzumeta.github.io/injurytools/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/playersl_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimal example of exposure data — playersl_df","title":"Minimal example of exposure data — playersl_df","text":"example player exposure data set contains minimum required exposure information well player- match-related variables. includes four football player exposure data, exposure measured (number minutes ) matches played row refers player-season.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/playersl_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimal example of exposure data — playersl_df","text":"","code":"playersl_df"},{"path":"https://lzumeta.github.io/injurytools/reference/playersl_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Minimal example of exposure data — playersl_df","text":"data frame 51 rows corresponding 4 players 32 variables: player_name Name football player (factor) player_id Identification number football player (factor) season Season player's entry corresponds (factor) year Year season started (numeric) matches_played Matches played player season (numeric) minutes_played Minutes played player season (numeric) liga Name ligue player played season (factor) club_name Name club player belongs season (factor) club_id Identification number club player belongs season (factor) age Age player season (numeric) place Place birth player (character) position Position player pitch (factor) foot  goals  assists  yellows  second_yellow  reds","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/playersl_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Minimal example of exposure data — playersl_df","text":"https://www.transfermarkt.com/","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data in a standardized format — prepare_data","title":"Prepare data in a standardized format — prepare_data","text":"data preprocessing functions provided injurytools package, involve: setting exposure injury data standardized format integrating sources data adequate data structure. prepare_inj() prepare_exp() set standardized names proper classes (key) columns injury exposure data, respectively. prepare_all() integrates , standardized injury exposure data sets, convert injd S3 object adequate structure statistical analyses. See Prepare Sports Injury Data vignette details.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data in a standardized format — prepare_data","text":"","code":"prepare_inj(   df_injuries0,   player = \"player\",   date_injured = \"date_injured\",   date_recovered = \"date_recovered\" )  prepare_exp(   df_exposures0,   player = \"player\",   date = \"date\",   time_expo = \"time_expo\" )  prepare_all(   data_exposures,   data_injuries,   exp_unit = c(\"minutes\", \"hours\", \"days\", \"matches_num\", \"matches_minutes\",     \"activity_days\", \"seasons\") )"},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data in a standardized format — prepare_data","text":"df_injuries0 data frame containing injury information, .e. columns referring player name/id, date injury date recovery (minimal data). player Character referring column name player information stored. date_injured Character referring column name information date injury stored. date_recovered Character referring column name information date recovery stored. df_exposures0 data frame containing exposure information, .e. columns referring player name/id, date exposure, total time exposure corresponding data entry (minimal data). date Character referring column name exposure date information stored. Besides, column must class Date integer/numeric. integer/numeric, refer year season started (e.g. date = 2015 refer 2015/2016 season)(e.g. date = 2018). time_expo Character referring column name information time exposure corresponding date stored. data_exposures Exposure data frame standardized column names, fashion prepare_exp() returns. data_injuries Injury data frame standardized column names, fashion prepare_inj() returns. exp_unit Character defining unit exposure time (\"minutes\" default).","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data in a standardized format — prepare_data","text":"prepare_inj() returns data frame key columns injury data standardized proper format. prepare_exp() returns data frame key columns exposure data standardized proper format. prepare_all() returns injd  S3 object contains necessary information proper data structure perform statistical analyses (e.g. calculate injury summary statistics, visualize injury data). exp_unit \"minutes\" (default), columns tstart_min tstop_min created specify time event (injury) values, starting stopping time interval, respectively. training time minutes, player risk, injury (censorship) occurred. choices, tstart_x tstop_x also created according exp_unit indicated (x, one : min, h, match, minPlay, d, acd s). columns useful survival analysis routines. See Note section. also creates days_lost column based difference date_recovered date_injured days. exist (raw data) overrides.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Prepare data in a standardized format — prepare_data","text":"Depending unit exposure, tstart_x tstop_x columns might values (e.g. exp_unit = \"matches_num\" player played match corresponding period time). Please aware performing survival analysis related task.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/prepare_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data in a standardized format — prepare_data","text":"","code":"df_injuries <- prepare_inj(df_injuries0   = raw_df_injuries,                            player         = \"player_name\",                            date_injured   = \"from\",                            date_recovered = \"until\")  df_exposures <- prepare_exp(df_exposures0 = raw_df_exposures,                             player        = \"player_name\",                             date          = \"year\",                             time_expo     = \"minutes_played\")  injd <- prepare_all(data_exposures = df_exposures,                     data_injuries  = df_injuries,                     exp_unit = \"matches_minutes\") head(injd) #> # A tibble: 6 × 19 #>   player       t0         tf         date_inj…¹ date_rec…² tstart     tstop      #>   <fct>        <date>     <date>     <date>     <date>     <date>     <date>     #> 1 adam-lallana 2017-07-01 2019-06-30 2017-07-31 2017-11-25 2017-07-01 2017-07-31 #> 2 adam-lallana 2017-07-01 2019-06-30 2018-03-31 2018-05-13 2017-11-25 2018-03-31 #> 3 adam-lallana 2017-07-01 2019-06-30 2018-09-04 2018-10-19 2018-05-13 2018-09-04 #> 4 adam-lallana 2017-07-01 2019-06-30 2018-11-09 2018-12-04 2018-10-19 2018-11-09 #> 5 adam-lallana 2017-07-01 2019-06-30 2019-01-06 2019-01-18 2018-12-04 2019-01-06 #> 6 adam-lallana 2017-07-01 2019-06-30 2019-04-01 2019-05-31 2019-01-18 2019-04-01 #> # … with 12 more variables: tstart_minPlay <dbl>, tstop_minPlay <dbl>, #> #   status <dbl>, enum <dbl>, days_lost <dbl>, player_id <fct>, season <fct>, #> #   games_lost <dbl>, injury <chr>, injury_acl <fct>, injury_type <fct>, #> #   injury_severity <fct>, and abbreviated variable names ¹​date_injured, #> #   ²​date_recovered class(injd) #> [1] \"injd\"       \"tbl_df\"     \"tbl\"        \"data.frame\" str(injd, 1) #> injd [108 × 19] (S3: injd/tbl_df/tbl/data.frame) #>  - attr(*, \"unit_exposure\")= chr \"matches_minutes\" #>  - attr(*, \"follow_up\")= tibble [28 × 3] (S3: tbl_df/tbl/data.frame) #>  - attr(*, \"data_exposures\")='data.frame':\t42 obs. of  16 variables: #>  - attr(*, \"data_injuries\")= tibble [82 × 11] (S3: tbl_df/tbl/data.frame) #>  - attr(*, \"data_injuries_long\")= tibble [164 × 3] (S3: tbl_df/tbl/data.frame)"},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimal example of exposure data — raw_df_exposures","title":"Minimal example of exposure data — raw_df_exposures","text":"example player exposure data set contains minimum required exposure information well player- match-related variables. includes Liverpool Football Club male's first team players' exposure data, exposure measured (number minutes ) matches played, two consecutive seasons, 2017-2018 2018-2019. row refers player-season. data scrapped https://www.transfermarkt.com/ website using self-defined R code rvest xml2 packages.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimal example of exposure data — raw_df_exposures","text":"","code":"raw_df_exposures"},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Minimal example of exposure data — raw_df_exposures","text":"data frame 42 rows corresponding 28 football players 16 variables: player_name Name football player (factor) player_id Identification number football player (factor) season Season player's entry corresponds (factor) year Year season started (numeric) matches_played Matches played player season (numeric) minutes_played Minutes played player season (numeric) liga Name ligue player played season (factor) club_name Name club player belongs season (factor) club_id Identification number club player belongs season (factor) age Age player season (numeric) place Place birth player (character) position Position player pitch (factor) foot Dominant leg player. One , left right (factor) goals Number goals scored player season (numeric) assists Number assists provided player season (numerical) reds Number red cards given player season (numeric)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Minimal example of exposure data — raw_df_exposures","text":"https://www.transfermarkt.com/","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_exposures.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Minimal example of exposure data — raw_df_exposures","text":"data frame provided illustrative purposes. warn might accurate, might mismatch non-completeness actually occurred.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":null,"dir":"Reference","previous_headings":"","what":"Minimal example of injury data — raw_df_injuries","title":"Minimal example of injury data — raw_df_injuries","text":"example injury data set containing minimum required injury information well injury-related variables. includes Liverpool Football Club male's first team players' injury data. row refers player-injury. data scrapped https://www.transfermarkt.com/ website using self-defined R code rvest xml2 packages.","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Minimal example of injury data — raw_df_injuries","text":"","code":"raw_df_injuries"},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Minimal example of injury data — raw_df_injuries","text":"data frame 82 rows corresponding 23 players 11 variables: player_name Name football player (factor) player_id Identification number football player (factor) season Season player's entry corresponds (factor) Date injury data entry (Date) Date recovery data entry (Date) days_lost Number days lost due injury (numeric) games_lost Number matches lost due injury (numeric) injury Injury specification appears https://wwww.transfermarkt.com (character) injury_acl Whether Anterior Cruciate Ligament (ACL) injury (NO_ACL) injury_type five level categorical variable indicating type injury, whether Bone, Concussion, Ligament, Muscle Unknown; , NA otherwise (factor) injury_severity four level categorical variable indicating severity injury, whether Minor (<7 days lost), Moderate ([7, 28) days lost), Severe ([28, 84) days lost) Very_severe (>=84 days lost); , NA otherwise  (factor)","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Minimal example of injury data — raw_df_injuries","text":"https://www.transfermarkt.com/","code":""},{"path":"https://lzumeta.github.io/injurytools/reference/raw_df_injuries.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Minimal example of injury data — raw_df_injuries","text":"data frame provided illustrative purposes. warn might accurate, might mismatch non-completeness actually occurred.","code":""}]
